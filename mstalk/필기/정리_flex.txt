
● flexbox, justfy-content, 
css flexbox main axis(주축 = 수퍙에 적용) cross axis(교차축 = 수직에적용)
- flex
직접적인 부모 자식에게 연결
- 
justfy-content = default로 수평에 적용 (main axis)
align-items = default로 수직에 적용(cross axis)
    -> 왜 default가 이렇까? flex-direction의 default값이 row라서

- vh, px
height: 100vh; 는 높이를 100%로 한다는 말이다.
 -> 화면이 다른모니터마다 적용 가능하다. px는 안되겠지~~

- 주의점
    1. 자식 엘리먼트에 말하지 않고, 부모 엘리먼트에 말한다.
    -> 자식들을 움직일거면 부모에게 말하면된다.
    span에게 적용시킬거면 div에게 말하면 됨.
    ex)
        <div>
            <span></span>
            <span></span>
            <span></span>
        </div>

- flex-direction
기본값은 row에 적용 column으로 바꾸면 교차축이 수평이됨.

- flex-wrap
flex-wrap: warp; 으로 하게되면 chrome창이 줄어들어도 div에 선언한 height와 width가 줄어들지 않고
아이템들이 다음줄로 넘어간다.

● position: fixed;
스크롤 내려도 초기에 화면의 초기에 선언한 위치에 고정되어 계속 보인다.
즉, fixed를 사용하면 레이어를 부수고 다른 레이어에 위치한다. 
opacity: 0~1; 로 투명하게해서 움직임을 볼 수 있음.
-
top, bottom, left, right중 하나만 수정에도 앞에 있는 레이어로 넘어가게된다.
#different에 top을 안주면 서로 block이라 침범하지 않지만, top: @px를 주게되면 신경쓰지 않고 넘나 들 수 있다.
-> 이게 position: fixed;이다.
div {
    width: 300px;
    height: 300px;
    color: white;
    background-color: teal;
}
#different {
    top: 3px;
    position: fixed;
    background-color: wheat;
    width:350px
}
<html>
    <div></div>
    <div id="different"></div>
</html>

● position
fiexed, relative, absolute, 디폴트로 static
absolute랑 relative를 많이 쓸 것이다. 아래에 설명.

● position: static; || position: relative;
static속성: 레아이웃이 박스를 처음 위치하는 곳에 두는 것을 말한다.
relative속성: 아주 조금 움직 이고 싶을 때?
 -> element가 처음 위치한 곳을 기준으로 상하좌우로 움직여 수정하는 것이다.
.green {
    position: relative;
    top: -10px;
    left: -10px;
}

● position: absolute;
green은 부모인 div를 기준으로 bottom으로 이동하는게 아니라 body의 bottom 0으로 이동한다.
absolute는 가장 가까운 relative 부모를 기준으로 이동시켜준다.
즉, green의 부모인 div는 relative가 아니다. div이지만 relative가 아니니까.
그래서 body가 relative한 부모가 된다.

green div는 absolute이고 relative한 부모를 찾아야한다. 그래서 green을 absolute로 하고 right: 0px;을 하게 되면
body를 기준으로 right: 0px로 이동한다.
 -> green의 부모 div를 기준으로 bottom: 0px; right: 0px;로 올믹고 싶으면 부모를 relative로 지정하면 된다.
 relative를 찾지 못한다면 body를 기준으로 맞춘다.
 -> 박스를 absolute로 만들고 부모를 relative하게 만들면 된다. ★★★

body{

}
div{
    # posotion: relative;를 해주면 body가아니라 여기를 기준으로 bottom:0px으로 이동.
}
.green{
    position: absolute;
    bottom: 0px;
}
<body>
    <div>
        <div class="green"></div>
    </div>
</body>


