● <!DOCTYPE html> 
: txt파일이 아니라 html문서라고 말해주는 것이다.

●
태그 <tag> ~~</tag>

● prettier
prettier를 사용해주면 편하다
setting -> Editor: format on save부분을 체크해준다.

● List
1. 순서가 없는 리스트 <ul></ul> 
ul에 바로 써주는게 아니라 리스트아이템이라는 것을 브라우저에게 알려줘야한다
<li>을 써줘야함
ex) 
<ul>
    <li>김치</li>
    <li>감자</li>
</ul>

2. 순서가 있는 리스트 <ol></ol>

● Anchor <a></a>  = 닻
: 다른곳으로 이동할 수 있게 한다. 그러므로 이동하고자 하는 링크주소를 추가해줘야 원하는 목적에 맞게 작용한다.
href(HTTP reference 또는 hyperlink reference)를 함께 사용한다.
ex)
<a href="http:google.com">구글</a> 
<h1 water='fire'></h1>  -- ㄱ
    ㄱ처럼 작성해도 된다. 하지만 <h1>안에는 water이라는 attribute가 없어서 아무것도 안일어난다.
    해당 태그가 속성을 가지고있으면 그 기능을 하고 그렇지 않으면 실행만되고 기능을 만들어 주지 않는한 아무일도 없음. html은 이러하다.

● img => self-closing tag <img/>

● head > meta 
<meta>태그에 대해 알아보자. 딱히 페이지에는 눈에 안들어오는 태그들이지만 여러가지 기능이 있다.
name과 content라는 속성이 있음

og:image 카카오톡에 url공유할때 보이는 이미지

● 
html css js를 검색할때 뒤에 mdn을 붙여주자. 그러면 Mozilla develop networdk로 안내래줄것이다.
=> w3 school말고 mdn사이트 참고하자. 젭라.! 

● 참고사이트
https://developer.mozilla.org/ko/docs/Web/HTML/Element

● form
: 매우 중요한 태그 mdn사이트보고 공부
<input> 

-> 속성을 어떻게 쓰든 상관은없는데 태크게 없는 attribute를 쓰게되면 실행은되지만 기능이 없다.

●●● 두 군데를 동시에 입력하려면
alt 누른 상태에서 원하는 곳에 찍으면 된다.

●●● 같은곳을 선택하고싶으면
ctrl+D를 반복해서 누르면된다.

● label
for과 함께 쓴다. for의 id와 label의 for의 값을 같게하면 label에 해당하는 것을 누르면 id의값이 같은곳을 실행한다.
<label for="@@">profile</label>
<input id="@@" type="text"/>

● div
box라고 생각하자. senantic tag 의미가 없는 태그(div, span).
하지만, semantic tag로 사용하면 이해하기가 훨씬 쉬워진다. 
예전엔 div세상이었지만 이제는 아니다.
구글에 >>>"html element mdn"<<<치면된다.
(https://developer.mozilla.org/ko/docs/Web/HTML/Element)

● 정리
HTML - 뼈대
CSS  - 근육
JS   - 뇌
웹사이트가 이해할 수 있게 HTML이라는 언어로 알려줘야한다.
항상 큰 따옴표를 사용하자.(''도 가능은하나 ""로 습관화하자.)

어떤 attribute는 모두 사용할 수 있고, 일부 attribute는 특정 태그만 사용가능하다.

암기하지말고
문서살펴보면서 하자. 이러한 태그가 있었다는 점만 기억해주면 된다.
자주사용하는건 외우면좋겠지. 매커니즘만 이해하고 구글링하자~

● collapsing margins
여러 블록의 위쪽 및 아래쪽 바깥 여백(마진)은 경우에 따라 제일 큰 여백의 크기를 가진 단일 여백으로 결합(상쇄)되곤 합니다. 이런 동작을 여백 상쇄라고 부릅니다.
-출처 MDN Web Docs-
그냥 여러개의 box들이 있을 떄 위아래의 margin이 겹치면 의도한바와 다르게 web에 표시된다.

●● inline태그
height, width는 inline태그에 적용이 안된다.
=> inline에 margin:20px;을 넣어도 위아래는 margin이 적용 안된다는 말이다.
모든방위에 적용되게 써도 좌우에만 적용된다.

● margin vs padding , border
margin  - border의 바깥
padding - border의 안쪽
border - border: 2px solid black;를 많이씀

# 
● Q: 여러개의 같은 태그가 있을 때 특정 위치들에 어떻게 css를 입힐까?
id말고 class속성을 이용한다. id는 identity이고, class는 중복 가능하고 여러개를 가질 수 있다.
#tomato = id="tomato"
.tomato = class="tomato"
<span class="tomato white gogo"> </span> #이건 3개의 클래스를 갖는다.
 => .tomato {~~} .white{~~} .gogo{~~} 3개의 css를 다 가질 수 있음.

● display속성에 대해 배우자
div는 disply:block; 이다. 이걸 inlineblock으로 만들 수 있다.
div {
    display: inline-block;
    width: 50px;
    height: 50px;
    background-color: teal;
}
문제점 
    1. div사이에 빈 공간이 생긴다. 공간을 설정하지 안았음에도 빈 공간이 생김. 이게 불편한 점이다.
    2. inline-block은 정해진 형식이 없다.
        -> 예전엔 margin-right: 10.1px ..등등 다 넣어가면서 간격을 맞췄지만 이제는 아니다.
        하지만 노트북마다 모니터크기가 다르다. 이때 문제가 발생.
    3. inline-block은 responsive desing(반응형 웹)을 지원하지 않는다.
    => flexbox가 나옴  ★★★★★★★★★★

●● display: inline , display:inline-block, display: block
display: block;
 옆에 아무것도 못 옴
display: inline:;
 너비나 높이가 무시돼서 아무것도 보이지 않음
display: inline-block;

● flexbox, justfy-content, 
css flexbox main axis(주축 = 수퍙에 적용) cross axis(교차축 = 수직에적용)
- flex
직접적인 부모 자식에게 연결
- 
justfy-content = default로 수평에 적용 (main axis)
align-items = default로 수직에 적용(cross axis)
    -> 왜 default가 이렇까? flex-direction의 default값이 row라서

- vh, px
height: 100vh; 는 높이를 100%로 한다는 말이다.
 -> 화면이 다른모니터마다 적용 가능하다. px는 안되겠지~~

- 주의점
    1. 자식 엘리먼트에 말하지 않고, 부모 엘리먼트에 말한다.
    -> 자식들을 움직일거면 부모에게 말하면된다.
    span에게 적용시킬거면 div에게 말하면 됨.
    ex)
        <div>
            <span></span>
            <span></span>
            <span></span>
        </div>

- flex-direction
기본값은 row에 적용 column으로 바꾸면 교차축이 수평이됨.

- flex-wrap
flex-wrap: warp; 으로 하게되면 chrome창이 줄어들어도 div에 선언한 height와 width가 줄어들지 않고
아이템들이 다음줄로 넘어간다.
